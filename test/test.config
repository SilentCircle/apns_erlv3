%% Something weird here - ct doesn't seem to see simulator_config
%% when it's standalone, so this is set up only to have one singles top-level CfgVarName.
%%

{sim_node_name, apns_sim_test_node}.

{simulator_config, [
                    {ssl, true},
                    {ssl_options, [{ip, {127,0,0,1}},
                                   {port, 2197},
                                   {cacertfile, "FakeAppleAllCAChain.cert.pem"},
                                   {certfile, "FakeAppleProdPushServer.cert.pem"},
                                   {keyfile, "FakeAppleProdPushServer.key.unencrypted.pem"},
                                   {honor_cipher_order, false},
                                   {fail_if_no_peer_cert, true},
                                   {verify, verify_peer},
                                   {versions, ['tlsv1.2']},
                                   {alpn_preferred_protocols, [<<"h2">>]}]}
                   ]
}.

%% Change to control the simulator log level.
{simulator_logging, [
                     {handlers, [{lager_console_backend, error},
                                 {lager_file_backend, [{file, "console.log"},
                                                       {level, debug},
                                                       {size, 10485760},
                                                       {date, "$D0"},
                                                       {count, 5}]}
                                ]}
                    ]
}.

{sessions, [
            [
             {name, 'apnsv3-com.example.FakeApp.voip'},
             {token, "4df5676af4307b3e0366da63e8854752d9219d8b9848f7c31bbab8741730fda6"},
             {config,
              [
               {host, <<"localhost">>},
               {port, 2197},
               {app_id_suffix, <<"com.example.FakeApp">>},
               {team_id, <<"6F44JJ9SDF">>},
               {apns_env, prod},
               {apns_topic, <<"com.example.FakeApp.voip">>},
               {disable_apns_cert_validation, true},
               {ssl_opts, [
                           {cacertfile, "FakeAppleAllCAChain.cert.pem"},
                           {certfile, "com.example.FakeApp.universal.cert.pem"},
                           {keyfile, "com.example.FakeApp.universal.key.unencrypted.pem"},
                           {verify, verify_peer},
                           {honor_cipher_order, false},
                           {versions, ['tlsv1.2']},
                           {alpn_advertised_protocols, [<<"h2">>]}]}
              ]}
            ]
           ]
}.

{valid_cert, [
             {name, 'apnsv3-com.example.FakeApp.voip'},
             {token, "4df5676af4307b3e0366da63e8854752d9219d8b9848f7c31bbab8741730fda6"},
             {config,
              [
               {host, <<"localhost">>},
               {port, 2197},
               {app_id_suffix, <<"com.example.FakeApp">>},
               {team_id, <<"6F44JJ9SDF">>},
               {apns_env, prod},
               {apns_topic, <<"com.example.FakeApp.voip">>},
               {disable_apns_cert_validation, false},
               {ssl_opts, [
                           {cacertfile, "FakeAppleAllCAChain.cert.pem"},
                           {certfile, "com.example.FakeApp.universal.cert.pem"},
                           {keyfile, "com.example.FakeApp.universal.key.unencrypted.pem"},
                           {verify, verify_peer},
                           {honor_cipher_order, false},
                           {versions, ['tlsv1.2']},
                           {alpn_advertised_protocols, [<<"h2">>]}]}
              ]}
            ]
}.

{lager, [
         {handlers, [
                     {lager_common_test_backend, error},
                     {lager_console_backend, error},
                     {lager_file_backend, [{file, "error.log"}, {level, error}, {size, 10485760}, {date, "$D0"}, {count, 5}]},
                     {lager_file_backend, [{file, "console.log"}, {level, debug}, {size, 10485760}, {date, "$D0"}, {count, 5}]}
                    ]}
        ]}.

%% Change bounce_level to control the level of log information that is
%% passed by lager to ct:pal.
{lager_common_test_backend, [{bounce_level, error}]}.

